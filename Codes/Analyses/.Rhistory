setwd("~/Dropbox/Dados/Desenvolvimento/Netbeans/CSI557-Computacao-Evolucionaria/Codes/Analyses")
# Limpando o ambiente de trabalho
rm(list = ls())
# Ler o arquivo com os dados
dados <- read.csv2("data-ag-bin-real.txt")
# Transformação da coluna com os números com E
dados$FO <- as.numeric(as.character.numeric_version(dados$FO))
# Carregando biblioteca
library(plyr)
# Contanto o número de observações de acordo com o teste
count(dados, c("Teste"))
# Menor valor
min(dados$FO)
# Maior valor
max(dados$FO)
# Desvio padrão
sd(dados$FO)
# Média
mean(dados$FO)
# Plot do valor em função do teste
boxplot(FO~Teste, data=dados)
# Separação dos valores conforme o método
bin1 <- dados$FO[dados$Teste == "BIN1"]
bin2 <- dados$FO[dados$Teste == "BIN2"]
real1 <- dados$FO[dados$Teste == "REAL1"]
real2 <- dados$FO[dados$Teste == "REAL2"]
# Media1 != Media2
t.test(bin1, bin2)
t.test(real1, real2)
t.test(bin2, real1)
# Media1 < Media2
t.test(bin1, bin2, alternative = 'l')
t.test(real1, real2, alternative = 'l')
t.test(bin2, real1, alternative = 'l')
# Media1 > Media2
t.test(bin1, bin2, alternative = 'g')
t.test(real1, real2, alternative = 'g')
t.test(bin2, real1, alternative = 'g')
## Análise de variância
modelo <- aov(FO~Teste, data=dados)
# Exibição do resultado do teste
summary(modelo)
## Comparações múltiplas
# Teste de Tukey (TSD - Tukey Significant Difference)
# http://www.portalaction.com.br/anova/31-teste-de-tukey
modelo.Tukey <- glht(modelo, linfct=mcp(Teste="Tukey"))
## Comparações múltiplas
# Teste de Tukey (TSD - Tukey Significant Difference)
# http://www.portalaction.com.br/anova/31-teste-de-tukey
require(multcomp)
modelo.Tukey <- glht(modelo, linfct=mcp(Teste="Tukey"))
plot(model.Tukey)
modelo.Tukey <- glht(modelo, linfct=mcp(Teste="Tukey"))
plot(modelo.Tukey)
par(mar = c(2,15,2,2), mfrow = c(1,1))
plot(modelo.Tukey)
par(mar = c(2,5,2,2), mfrow = c(1,1))
plot(modelo.Tukey)
par(mar = c(2,8,2,2), mfrow = c(1,1))
plot(modelo.Tukey)
par(mar = c(2,8,2,2), mfrow = c(1,1))
plot(modelo.Tukey)
# Limpando o ambiente de trabalho
rm(list = ls())
# Ler o arquivo com os dados
dados <- read.csv2("data-ag-bin-real.txt")
# Transformação da coluna com os números com E - isso depende da base de dados
dados$FO <- as.numeric(as.character.numeric_version(dados$FO))
# Carregando biblioteca
library(plyr)
# Contanto o número de observações de acordo com o teste
count(dados, c("Teste"))
# Menor valor
min(dados$FO)
# Maior valor
max(dados$FO)
# Desvio padrão
sd(dados$FO)
# Média
mean(dados$FO)
# Plot do valor em função do teste
boxplot(FO~Teste, data=dados)
# Separação dos valores conforme o método
bin1 <- dados$FO[dados$Teste == "BIN1"]
bin2 <- dados$FO[dados$Teste == "BIN2"]
real1 <- dados$FO[dados$Teste == "REAL1"]
real2 <- dados$FO[dados$Teste == "REAL2"]
# Media1 != Media2
t.test(bin1, bin2)
t.test(real1, real2)
t.test(bin2, real1)
# Media1 < Media2
t.test(bin1, bin2, alternative = 'l')
# Media1 > Media2
t.test(bin1, bin2, alternative = 'g')
## Análise de variância
# http://www.portalaction.com.br/anova/anova-um-fator
modelo <- aov(FO~Teste, data=dados)
# Exibição do resultado do teste
summary(modelo)
## Comparações múltiplas
# Teste de Tukey (TSD - Tukey Significant Difference)
# http://www.portalaction.com.br/anova/31-teste-de-tukey
require(multcomp)
modelo.Tukey <- glht(modelo, linfct=mcp(Teste="Tukey"))
par(mar = c(2,8,2,2), mfrow = c(1,1))
plot(modelo.Tukey)
